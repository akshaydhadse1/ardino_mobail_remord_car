// defines pins numbers
const int trigPin2 = 9;
const int echoPin2 = 10;
const int buzzer = 11;
const int ledPin = 13;

// defines variables
long duration2;
int distance;
int safetyDistance;


#include <Servo.h>


//servo library

Servo servo;

int trigPin = 5 ;

int echoPin = 6;

int servoPin = 2;

int led= 10;

long duration, dist, average;

long aver[3]; //array for average

void setup() {

Serial.begin(9600);

servo.attach(servoPin);

pinMode(trigPin, OUTPUT);

pinMode(echoPin, INPUT);

servo.write(0); //close cap on power on

delay(100);

servo.detach();
pinMode(trigPin2, OUTPUT); // Sets the trigPin as an Output
pinMode(echoPin2, INPUT); // Sets the echoPin as an Input
pinMode(buzzer, OUTPUT);
pinMode(ledPin, OUTPUT);
Serial.begin(9600); // Starts the serial communication


}

void measure() {

digitalWrite(10,HIGH);

digitalWrite(trigPin, LOW);

delayMicroseconds(5);

digitalWrite(trigPin, HIGH);

delayMicroseconds(15);

digitalWrite(trigPin, LOW);

pinMode(echoPin, INPUT);

duration = pulseIn(echoPin, HIGH);

dist = (duration/2) / 29.1; //obtain distance

}

void loop() {

for (int i=0;i<=2;i++) { //average distance

measure();

aver[i]=dist;

delay(10); //delay between measurements

}

dist=(aver[0]+aver[1]+aver[2])/3;

if ( dist<50 ) {

//Change distance as per your need

servo.attach(servoPin);

delay(1);

servo.write(0);

delay(3000);

servo.write(150);

delay(1000);

servo.detach();

}

Serial.print(dist);
// Clears the trigPin
digitalWrite(trigPin2, LOW);
delayMicroseconds(1000);

// Sets the trigPin on HIGH state for 10 micro seconds
digitalWrite(trigPin2, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin2, LOW);

// Reads the echoPin, returns the sound wave travel time in microseconds
duration2 = pulseIn(echoPin2, HIGH);

// Calculating the distance
distance= duration2*0.034/2;

safetyDistance = distance;
if (safetyDistance <= 10){
  digitalWrite(buzzer, HIGH);
  digitalWrite(ledPin, HIGH);
}
else{
  digitalWrite(buzzer, LOW);
  digitalWrite(ledPin, LOW);
}

// Prints the distance on the Serial Monitor
Serial.print("Distance: ");
Serial.println(distance);


}
